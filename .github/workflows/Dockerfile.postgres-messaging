name: Build and Publish Postgres Messaging Image

on:
  push:
    branches: [ main, master ]
    paths:
      - 'docker/postgres/**'
      - 'sql/**'
      - '.github/workflows/postgres-build.yml'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'docker/postgres/**'
      - 'sql/**'
      - '.github/workflows/postgres-build.yml'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Image tag (default: latest)'
        required: false
        default: 'latest'

env:
  IMAGE_NAME: pg-messaging-postgres
  REGISTRY: ghcr.io
  IMAGE_TAG: ${{ github.event.inputs.tag || 'latest' }}

jobs:
  build-and-push:
    name: Build and Push Multi-Architecture Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: 'arm64,amd64'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ env.IMAGE_TAG }}
            type=sha,prefix=
            type=ref,event=branch
            type=ref,event=pr

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: .github/workflows/Dockerfile.postgres-messaging
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max